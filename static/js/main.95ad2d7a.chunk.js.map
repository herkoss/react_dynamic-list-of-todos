{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","className","this","props","todos","map","todo","key","id","classNames","completed","type","checked","readOnly","title","onClick","selectUser","userId","React","Component","request","url","fetch","then","response","json","data","getUser","userIdUlr","CurrentUser","state","user","loadData","selectedUserId","setState","prevProps","name","email","phone","App","selectedTypeOfTodos","newUserId","changeHandler","event","target","value","console","log","filteredTodos","filter","includes","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95ad2d7a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n    \n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {\n              this.props.todos.map(todo => (\n                <li\n                  key={todo.id}\n                  className={classNames({\n                    \"TodoList__item\": true,\n                    \"TodoList__item--checked\": todo.completed,\n                    \"TodoList__item--unchecked\": !todo.completed,\n                  })}\n                >\n                  <label>\n                    {todo.completed ? (\n                      <input\n                        type=\"checkbox\"\n                        checked\n                        readOnly\n                      />\n                    ) : (\n                      <input\n                        type=\"checkbox\"\n                        readOnly\n                      />\n                    )}\n                    <p>{todo.title}</p>\n                  </label>\n      \n                  <button\n                    className=\"\n                      TodoList__user-button\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => this.props.selectUser(todo.userId)}\n                  >\n                    {`User #${todo.userId}`}\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        \n      </div>\n    )\n  }\n}\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(response => response.data);\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = (userId) => {\n  const userIdUlr = `/users/${userId}`;\n\n  return request(userIdUlr);\n};\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadData();\n    }\n  }\n\n  loadData = () => {\n    getUser(this.props.selectedUserId)\n      .then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        {user ? (\n          <>\n            <h2 className=\"CurrentUser__title\"><span>Selected user: {user.id}</span></h2>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </>\n        ) : (\n          <span>User is loading...</span>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    title: '',\n    selectedTypeOfTodos: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (newUserId) => (\n    this.setState({ selectedUserId: newUserId })\n  );\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n    this.setState({[name]: value})\n  };\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      title,\n      selectedTypeOfTodos,\n    } = this.state;\n\n    console.log(title);\n\n    const filteredTodos = todos.filter(\n      todo => {\n        if (!todo.title) {\n          return false;\n        }\n\n        if (selectedTypeOfTodos === 'all') {\n          return todo.title.includes(title);\n        }\n\n        if (selectedTypeOfTodos === 'done') {\n          return todo.title.includes(title) && todo.completed;\n        }\n\n        if (selectedTypeOfTodos === 'undone') {\n          return todo.title.includes(title) && !todo.completed;\n        }\n\n        return false;\n      }\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            name=\"title\"\n            placeholder=\"Input ToDo title\"\n            value={this.state.title}\n            onChange={(event) => this.changeHandler(event)}\n          />\n          <select\n            name=\"selectedTypeOfTodos\"\n            value={this.state.selectedTypeOfTodos}\n            onChange={(event) => this.changeHandler(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"done\">Done</option>\n            <option value=\"undone\">Undone</option>\n          </select>\n          <TodoList\n            todos={filteredTodos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}