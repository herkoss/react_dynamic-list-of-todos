{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","inputHandler","event","setState","target","name","value","className","this","props","todos","map","todo","key","id","classNames","completed","type","checked","readOnly","title","onClick","selectUser","userId","React","Component","BASE_URL","request","baseUrl","url","fetch","then","response","json","getUser","userIdUlr","CurrentUser","state","user","loadData","selectedUserId","data","prevProps","email","phone","App","input","select","newUserId","changeHandler","console","log","todosFiltered","filter","includes","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28ded1b2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n\n  inputHandler = (event) => this.setState({[event.target.name]: event.target.value})\n\n  render() {\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n    \n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {\n              this.props.todos.map(todo => (\n                <li\n                  key={todo.id}\n                  className={classNames(\n                    \"TodoList__item\",\n                    {\n                      \"TodoList__item--checked\": todo.completed === true,\n                      \"TodoList__item--unchecked\": todo.completed === false,\n                    })\n                  }\n                >\n                  <label>\n                    {todo.completed ? (\n                      <input\n                        type=\"checkbox\"\n                        checked\n                        readOnly\n                      />\n                      ) : (\n                        <input\n                        type=\"checkbox\"\n                        readOnly\n                      />\n                      )\n                    }\n                    <p>{todo.title}</p>\n                  </label>\n      \n                  <button\n                    className=\"\n                      TodoList__user-button\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => this.props.selectUser(todo.userId)}\n                  >\n                    {`User #${todo.userId}`}\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        \n      </div>\n    )\n  }\n}\n","const BASE_URL = 'https://mate-api.herokuapp.com';\nconst urlTodos = '/todos';\n\nconst request = (baseUrl, url) => fetch(`${baseUrl}${url}`)\n  .then(response => response.json());\n\nexport const getTodos = () => request(BASE_URL, urlTodos);\n\nexport const getUser = (userId) => {\n  const userIdUlr = `/users/${userId}`;\n\n  return request(BASE_URL, userIdUlr);\n};\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadData();\n    }\n  }\n\n  loadData = () => {\n    getUser(this.props.selectedUserId)\n      .then(user => this.setState({ user: user.data }));\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return <span>User cannot be finded</span>;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>Selected user: {user.id}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    input: '',\n    select: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n    .then(todos => this.setState({todos: todos.data}));\n  }\n\n  selectUser = (newUserId) => (\n    this.setState({selectedUserId: newUserId})\n  );\n\n  changeHandler = (event) => (\n    this.setState({[event.target.name]: event.target.value})\n  );\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    console.log('select', this.state.select);\n\n    const todosFiltered = todos.filter(\n      todo => {\n        if (this.state.select === 'all' && todo.title) {\n          return todo.title.includes(this.state.input);\n        }\n\n        if (this.state.select === 'true' && todo.title) {\n          return (todo.title.includes(this.state.input)) && (todo.completed === !!this.state.select);\n        }\n\n        if (this.state.select === '' && todo.title) {\n          return (todo.title.includes(this.state.input)) && (todo.completed === !!this.state.select);\n        }\n\n        return false;\n      }\n    );\n    console.log('todosFiltered', todosFiltered);\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            name=\"input\"\n            placeholder=\"Input ToDo title\"\n            value={this.state.input}\n            onChange={(event) => this.changeHandler(event)}\n          />\n          <select\n            name=\"select\"\n            value={this.state.select}\n            onChange={(event) => this.changeHandler(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"true\">Done</option>\n            <option value=\"\">Undone</option>\n          </select>\n          <TodoList\n            todos={todosFiltered}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={this.state.selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}